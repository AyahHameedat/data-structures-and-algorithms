/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;

import java.util.Collection;
import java.util.List;

import static org.junit.Assert.*;

public class AppTest {
    @Test public void testAppHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull("app should have a greeting", classUnderTest.getGreeting());
    }


    @Test
    public void emptyGraph()
    {
        Graph graph = new Graph();


        String exp = "";
        String res = graph.printGraph();
        assertEquals(exp, res);
    }

    @Test
    public void addVertexTest()
    {
        Graph graph = new Graph();

        graph.addVertex("A");
        graph.addVertex("B");
        graph.addVertex("C");

        String exp = "Vertex{data='A'weight='0'}[]Vertex{data='B'weight='0'}[]Vertex{data='C'weight='0'}[]";
        String res = graph.printGraph();
        assertEquals(exp, res);
    }

    @Test
    public void addEdgesTest()
    {
        Graph graph = new Graph();

        graph.addVertex("A");
        graph.addVertex("B");
        graph.addVertex("C");

        graph.addEdges("A","B",1);
        graph.addEdges("B","C",2);
        graph.addEdges("A","C",3);

        String exp = "Vertex{data='A'weight='0'}[Vertex{data='B'weight='1'}, Vertex{data='C'weight='3'}]Vertex{data='B'weight='0'}[Vertex{data='A'weight='1'}, Vertex{data='C'weight='2'}]Vertex{data='C'weight='0'}[Vertex{data='B'weight='2'}, Vertex{data='A'weight='3'}]";
        String res = graph.printGraph();
        assertEquals(exp, res);
    }


    @Test
    public void getVerticesTest()
    {
        Graph graph = new Graph();

        graph.addVertex("A");
        graph.addVertex("B");
        graph.addVertex("C");

        graph.addEdges("A","B",1);
        graph.addEdges("B","C",2);
        graph.addEdges("A","C",3);

        String exp = "[Vertex{data='A'weight='0'}, [Vertex{data='B'weight='1'}, Vertex{data='C'weight='3'}], Vertex{data='B'weight='0'}, [Vertex{data='A'weight='1'}, Vertex{data='C'weight='2'}], Vertex{data='C'weight='0'}, [Vertex{data='B'weight='2'}, Vertex{data='A'weight='3'}]]";
        List res = graph.getVertices();
        assertEquals(exp, res.toString());
    }

    @Test
    public void getNeighborsTest()
    {
        Graph graph = new Graph();

        graph.addVertex("A");
        graph.addVertex("B");
        graph.addVertex("C");

        graph.addEdges("A","B",1);
        graph.addEdges("B","C",2);
        graph.addEdges("A","C",3);

        String exp = "[[Vertex{data='B'weight='1'}, Vertex{data='C'weight='3'}], [Vertex{data='A'weight='1'}, Vertex{data='C'weight='2'}], [Vertex{data='B'weight='2'}, Vertex{data='A'weight='3'}]]";
        Collection<List<Vertex>> res = graph.getNeighbors();
        assertEquals(exp, res.toString());
    }


    @Test
    public void getSizeTest()
    {
        Graph graph = new Graph();

        graph.addVertex("A");
        graph.addVertex("B");
        graph.addVertex("C");

        graph.addEdges("A","B",1);
        graph.addEdges("B","C",2);
        graph.addEdges("A","C",3);

        String exp = "3";
        int res = graph.getSize();
        assertEquals(exp, String.valueOf(res));
    }
}
